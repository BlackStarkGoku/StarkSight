/**
 * This file is autogenerated by Scaffold-Stark.
 * You should not edit it manually or your changes might be overwritten.
 */

const deployedContracts = {
  devnet: {
    YourContractExportName: {
      address:
        "0x477688096487c3eb3eb20e7a3beccb975376bbe6d2c8f8d752810ae2922832f",
      abi: [
        {
          type: "impl",
          name: "YourContractImpl",
          interface_name: "contracts::YourContract::IYourContract",
        },
        {
          type: "struct",
          name: "core::byte_array::ByteArray",
          members: [
            {
              name: "data",
              type: "core::array::Array::<core::bytes_31::bytes31>",
            },
            {
              name: "pending_word",
              type: "core::felt252",
            },
            {
              name: "pending_word_len",
              type: "core::integer::u32",
            },
          ],
        },
        {
          type: "struct",
          name: "core::integer::u256",
          members: [
            {
              name: "low",
              type: "core::integer::u128",
            },
            {
              name: "high",
              type: "core::integer::u128",
            },
          ],
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::YourContract::IYourContract",
          items: [
            {
              type: "function",
              name: "greeting",
              inputs: [],
              outputs: [
                {
                  type: "core::byte_array::ByteArray",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "set_greeting",
              inputs: [
                {
                  name: "new_greeting",
                  type: "core::byte_array::ByteArray",
                },
                {
                  name: "amount_eth",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "withdraw",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "premium",
              inputs: [],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "impl",
          name: "OwnableImpl",
          interface_name: "openzeppelin_access::ownable::interface::IOwnable",
        },
        {
          type: "interface",
          name: "openzeppelin_access::ownable::interface::IOwnable",
          items: [
            {
              type: "function",
              name: "owner",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "transfer_ownership",
              inputs: [
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounce_ownership",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnershipTransferred",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              kind: "nested",
            },
            {
              name: "OwnershipTransferStarted",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::YourContract::YourContract::GreetingChanged",
          kind: "struct",
          members: [
            {
              name: "greeting_setter",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_greeting",
              type: "core::byte_array::ByteArray",
              kind: "key",
            },
            {
              name: "premium",
              type: "core::bool",
              kind: "data",
            },
            {
              name: "value",
              type: "core::integer::u256",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::YourContract::YourContract::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnableEvent",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
              kind: "flat",
            },
            {
              name: "GreetingChanged",
              type: "contracts::YourContract::YourContract::GreetingChanged",
              kind: "nested",
            },
          ],
        },
      ],
      classHash:
        "0x15981f4687739d007cf4d6ec112dc72f2e46026c1d1e031ec698fb282d43399",
    },
    BetMaker: {
      address:
        "0x4cd8796b9bcb379c27d070e6a0922c2f409d91ae96fa9793130423a150404c4",
      abi: [
        {
          type: "impl",
          name: "BetMakerImpl",
          interface_name: "contracts::BetMaker::IBetMaker",
        },
        {
          type: "struct",
          name: "core::integer::u256",
          members: [
            {
              name: "low",
              type: "core::integer::u128",
            },
            {
              name: "high",
              type: "core::integer::u128",
            },
          ],
        },
        {
          type: "struct",
          name: "core::byte_array::ByteArray",
          members: [
            {
              name: "data",
              type: "core::array::Array::<core::bytes_31::bytes31>",
            },
            {
              name: "pending_word",
              type: "core::felt252",
            },
            {
              name: "pending_word_len",
              type: "core::integer::u32",
            },
          ],
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::BetMaker::StrategyInfos",
          members: [
            {
              name: "name",
              type: "core::felt252",
            },
            {
              name: "symbol",
              type: "core::felt252",
            },
            {
              name: "address",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "enum",
          name: "contracts::BetMaker::YieldStrategy",
          variants: [
            {
              name: "None",
              type: "()",
            },
            {
              name: "Nimbora",
              type: "contracts::BetMaker::StrategyInfos",
            },
            {
              name: "Nostra",
              type: "()",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::BetMaker::Outcome",
          members: [
            {
              name: "name",
              type: "core::felt252",
            },
            {
              name: "bought_amount",
              type: "core::integer::u256",
            },
          ],
        },
        {
          type: "enum",
          name: "core::option::Option::<contracts::BetMaker::Outcome>",
          variants: [
            {
              name: "Some",
              type: "contracts::BetMaker::Outcome",
            },
            {
              name: "None",
              type: "()",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::BetMaker::CryptoBet",
          members: [
            {
              name: "bet_id",
              type: "core::integer::u256",
            },
            {
              name: "name",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "image",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "category",
              type: "core::felt252",
            },
            {
              name: "description",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "is_settled",
              type: "core::bool",
            },
            {
              name: "is_active",
              type: "core::bool",
            },
            {
              name: "deadline",
              type: "core::integer::u64",
            },
            {
              name: "vote_deadline",
              type: "core::integer::u64",
            },
            {
              name: "total_money_betted",
              type: "core::integer::u256",
            },
            {
              name: "yield_strategy",
              type: "contracts::BetMaker::YieldStrategy",
            },
            {
              name: "reference_price_key",
              type: "core::felt252",
            },
            {
              name: "reference_price",
              type: "core::integer::u256",
            },
            {
              name: "bet_condition",
              type: "core::integer::u8",
            },
            {
              name: "outcomes",
              type: "(contracts::BetMaker::Outcome, contracts::BetMaker::Outcome)",
            },
            {
              name: "winning_outcome",
              type: "core::option::Option::<contracts::BetMaker::Outcome>",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::BetMaker::IBetMaker",
          items: [
            {
              type: "function",
              name: "create_crypto_bet",
              inputs: [
                {
                  name: "deadline",
                  type: "core::integer::u64",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "get_crypto_bet",
              inputs: [
                {
                  name: "bet_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "contracts::BetMaker::CryptoBet",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_crypto_bets_count",
              inputs: [],
              outputs: [
                {
                  type: "core::integer::u256",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "impl",
          name: "OwnableImpl",
          interface_name: "openzeppelin_access::ownable::interface::IOwnable",
        },
        {
          type: "interface",
          name: "openzeppelin_access::ownable::interface::IOwnable",
          items: [
            {
              type: "function",
              name: "owner",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "transfer_ownership",
              inputs: [
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounce_ownership",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnershipTransferred",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              kind: "nested",
            },
            {
              name: "OwnershipTransferStarted",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::BetMaker::BetMaker::CryptoBetCreated",
          kind: "struct",
          members: [
            {
              name: "market",
              type: "contracts::BetMaker::CryptoBet",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::BetMaker::BetMaker::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnableEvent",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
              kind: "flat",
            },
            {
              name: "CryptoBetCreated",
              type: "contracts::BetMaker::BetMaker::CryptoBetCreated",
              kind: "nested",
            },
          ],
        },
      ],
      classHash:
        "0x7d168513c1ae424a5f6084f0f852ff3ddff7675a69ff8b20480841892a3fbbb",
    },
  },
} as const;

export default deployedContracts;
