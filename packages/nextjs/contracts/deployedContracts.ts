/**
 * This file is autogenerated by Scaffold-Stark.
 * You should not edit it manually or your changes might be overwritten.
 */

const deployedContracts = {
  devnet: {
    BetCryptoMaker: {
      address:
        "0x7e587663427b039154c22c771bf4be1a368fc6b905d4d15ca76888f43ec3b98",
      abi: [
        {
          type: "impl",
          name: "BetCryptoMakerImpl",
          interface_name: "contracts::cryptos::BetCryptoMaker::IBetCryptoMaker",
        },
        {
          type: "struct",
          name: "core::byte_array::ByteArray",
          members: [
            {
              name: "data",
              type: "core::array::Array::<core::bytes_31::bytes31>",
            },
            {
              name: "pending_word",
              type: "core::felt252",
            },
            {
              name: "pending_word_len",
              type: "core::integer::u32",
            },
          ],
        },
        {
          type: "struct",
          name: "core::integer::u256",
          members: [
            {
              name: "low",
              type: "core::integer::u128",
            },
            {
              name: "high",
              type: "core::integer::u128",
            },
          ],
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::cryptos::BetCryptoMaker::Outcome",
          members: [
            {
              name: "result_name",
              type: "core::felt252",
            },
            {
              name: "is_yes_outcome",
              type: "core::bool",
            },
            {
              name: "result_token_price",
              type: "core::integer::u256",
            },
            {
              name: "nimbora_total_amount_with_yield",
              type: "core::integer::u256",
            },
            {
              name: "is_settled",
              type: "core::bool",
            },
          ],
        },
        {
          type: "struct",
          name: "openzeppelin::token::erc20::interface::IERC20CamelDispatcher",
          members: [
            {
              name: "contract_address",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::cryptos::BetCryptoMaker::ITokenManagerDispatcher",
          members: [
            {
              name: "contract_address",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::cryptos::BetCryptoMaker::BetInfos",
          members: [
            {
              name: "id",
              type: "core::integer::u256",
            },
            {
              name: "name",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "description",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "category",
              type: "core::felt252",
            },
            {
              name: "reference_token_price",
              type: "core::integer::u256",
            },
            {
              name: "end_vote_bet_timestamp",
              type: "core::integer::u64",
            },
            {
              name: "end_bet_timestamp",
              type: "core::integer::u64",
            },
            {
              name: "is_bet_ended",
              type: "core::bool",
            },
            {
              name: "is_nimbora_claimed",
              type: "core::bool",
            },
            {
              name: "total_bet_amount",
              type: "core::integer::u256",
            },
            {
              name: "total_bet_yes_amount",
              type: "core::integer::u256",
            },
            {
              name: "total_bet_no_amount",
              type: "core::integer::u256",
            },
            {
              name: "total_shares_amount",
              type: "core::integer::u256",
            },
            {
              name: "winner_result",
              type: "contracts::cryptos::BetCryptoMaker::Outcome",
            },
            {
              name: "bet_token",
              type: "openzeppelin::token::erc20::interface::IERC20CamelDispatcher",
            },
            {
              name: "nimbora",
              type: "contracts::cryptos::BetCryptoMaker::ITokenManagerDispatcher",
            },
            {
              name: "token_to_fetch_from_pragma",
              type: "core::felt252",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::cryptos::BetCryptoMaker::UserBetPosition",
          members: [
            {
              name: "amount",
              type: "core::integer::u256",
            },
            {
              name: "has_claimed",
              type: "core::bool",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::cryptos::BetCryptoMaker::UserBetPositionOverview",
          members: [
            {
              name: "bet_id",
              type: "core::integer::u256",
            },
            {
              name: "name",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "category",
              type: "core::felt252",
            },
            {
              name: "is_yes",
              type: "core::bool",
            },
            {
              name: "amount",
              type: "core::integer::u256",
            },
            {
              name: "has_claimed",
              type: "core::bool",
            },
            {
              name: "is_bet_ended",
              type: "core::bool",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::cryptos::BetCryptoMaker::IBetCryptoMaker",
          items: [
            {
              type: "function",
              name: "createBet",
              inputs: [
                {
                  name: "name",
                  type: "core::byte_array::ByteArray",
                },
                {
                  name: "description",
                  type: "core::byte_array::ByteArray",
                },
                {
                  name: "category",
                  type: "core::felt252",
                },
                {
                  name: "reference_token_price",
                  type: "core::integer::u256",
                },
                {
                  name: "end_vote_bet_timestamp",
                  type: "core::integer::u64",
                },
                {
                  name: "end_bet_timestamp",
                  type: "core::integer::u64",
                },
                {
                  name: "bet_token_address",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "nimbora_address",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "token_to_fetch_from_pragma",
                  type: "core::felt252",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "getTotalBets",
              inputs: [],
              outputs: [
                {
                  type: "core::integer::u256",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "getBet",
              inputs: [
                {
                  name: "bet_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "contracts::cryptos::BetCryptoMaker::BetInfos",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "getAllBets",
              inputs: [],
              outputs: [
                {
                  type: "core::array::Array::<contracts::cryptos::BetCryptoMaker::BetInfos>",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "vote_yes",
              inputs: [
                {
                  name: "amount_eth",
                  type: "core::integer::u256",
                },
                {
                  name: "bet_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "vote_no",
              inputs: [
                {
                  name: "amount_eth",
                  type: "core::integer::u256",
                },
                {
                  name: "bet_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "get_yes_position",
              inputs: [
                {
                  name: "caller_address",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "bet_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "contracts::cryptos::BetCryptoMaker::UserBetPosition",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_no_position",
              inputs: [
                {
                  name: "caller_address",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "bet_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "contracts::cryptos::BetCryptoMaker::UserBetPosition",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "getAllUserPositions",
              inputs: [
                {
                  name: "user",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::array::Array::<contracts::cryptos::BetCryptoMaker::UserBetPositionOverview>",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "settleBet",
              inputs: [
                {
                  name: "bet_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "claimNimboraShares",
              inputs: [
                {
                  name: "bet_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "checkHasClaimed",
              inputs: [
                {
                  name: "caller_address",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "bet_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "claimRewards",
              inputs: [
                {
                  name: "bet_id",
                  type: "core::integer::u256",
                },
                {
                  name: "claim_yes",
                  type: "core::bool",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "fund_contract",
              inputs: [
                {
                  name: "amount_eth",
                  type: "core::integer::u256",
                },
                {
                  name: "bet_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "impl",
          name: "OwnableImpl",
          interface_name: "openzeppelin::access::ownable::interface::IOwnable",
        },
        {
          type: "interface",
          name: "openzeppelin::access::ownable::interface::IOwnable",
          items: [
            {
              type: "function",
              name: "owner",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "transfer_ownership",
              inputs: [
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounce_ownership",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "impl",
          name: "PragmaPriceImpl",
          interface_name: "contracts::cryptos::PragmaPrice::IPragmaPrice",
        },
        {
          type: "enum",
          name: "pragma_lib::types::DataType",
          variants: [
            {
              name: "SpotEntry",
              type: "core::felt252",
            },
            {
              name: "FutureEntry",
              type: "(core::felt252, core::integer::u64)",
            },
            {
              name: "GenericEntry",
              type: "core::felt252",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::cryptos::PragmaPrice::IPragmaPrice",
          items: [
            {
              type: "function",
              name: "get_asset_price_median",
              inputs: [
                {
                  name: "oracle_address",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "asset",
                  type: "pragma_lib::types::DataType",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u128",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "set_asset_price_median_checkoint",
              inputs: [
                {
                  name: "oracle_address",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "asset",
                  type: "pragma_lib::types::DataType",
                },
              ],
              outputs: [],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "pragma_address",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnershipTransferred",
              type: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              kind: "nested",
            },
            {
              name: "OwnershipTransferStarted",
              type: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::cryptos::PragmaPrice::PragmaPrice::Event",
          kind: "enum",
          variants: [],
        },
        {
          type: "event",
          name: "contracts::cryptos::BetCryptoMaker::BetCryptoMaker::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnableEvent",
              type: "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
              kind: "flat",
            },
            {
              name: "PragmaPriceEvent",
              type: "contracts::cryptos::PragmaPrice::PragmaPrice::Event",
              kind: "flat",
            },
          ],
        },
      ],
      classHash:
        "0x5a22646ad7c1bd43ba37c15f3c0eeb24065612fa55d21d955c7183dcccf7ccd",
    },
  },
} as const;

export default deployedContracts;
