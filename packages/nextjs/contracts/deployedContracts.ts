/**
 * This file is autogenerated by Scaffold-Stark.
 * You should not edit it manually or your changes might be overwritten.
 */

const deployedContracts = {
  devnet: {
    YourContract: {
      address:
        "0x42fb7a5b4242c68fdc92e399f9701543198efb80f24f6a09abe83dab97d9af5",
      abi: [
        {
          type: "impl",
          name: "YourContractImpl",
          interface_name: "contracts::YourContract::IYourContract",
        },
        {
          type: "struct",
          name: "core::byte_array::ByteArray",
          members: [
            {
              name: "data",
              type: "core::array::Array::<core::bytes_31::bytes31>",
            },
            {
              name: "pending_word",
              type: "core::felt252",
            },
            {
              name: "pending_word_len",
              type: "core::integer::u32",
            },
          ],
        },
        {
          type: "struct",
          name: "core::integer::u256",
          members: [
            {
              name: "low",
              type: "core::integer::u128",
            },
            {
              name: "high",
              type: "core::integer::u128",
            },
          ],
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::YourContract::IYourContract",
          items: [
            {
              type: "function",
              name: "greeting",
              inputs: [],
              outputs: [
                {
                  type: "core::byte_array::ByteArray",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "set_greeting",
              inputs: [
                {
                  name: "new_greeting",
                  type: "core::byte_array::ByteArray",
                },
                {
                  name: "amount_eth",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "withdraw",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "premium",
              inputs: [],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "impl",
          name: "OwnableImpl",
          interface_name: "openzeppelin_access::ownable::interface::IOwnable",
        },
        {
          type: "interface",
          name: "openzeppelin_access::ownable::interface::IOwnable",
          items: [
            {
              type: "function",
              name: "owner",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "transfer_ownership",
              inputs: [
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounce_ownership",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnershipTransferred",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              kind: "nested",
            },
            {
              name: "OwnershipTransferStarted",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::YourContract::YourContract::GreetingChanged",
          kind: "struct",
          members: [
            {
              name: "greeting_setter",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_greeting",
              type: "core::byte_array::ByteArray",
              kind: "key",
            },
            {
              name: "premium",
              type: "core::bool",
              kind: "data",
            },
            {
              name: "value",
              type: "core::integer::u256",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::YourContract::YourContract::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnableEvent",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
              kind: "flat",
            },
            {
              name: "GreetingChanged",
              type: "contracts::YourContract::YourContract::GreetingChanged",
              kind: "nested",
            },
          ],
        },
      ],
      classHash:
        "0x15981f4687739d007cf4d6ec112dc72f2e46026c1d1e031ec698fb282d43399",
    },
    BetMaker: {
      address:
        "0x5c12fd55da4472a6b150da333f94e9d1282cd3334e438db0d8000f9fec5e40c",
      abi: [
        {
          type: "impl",
          name: "BetMakerImpl",
          interface_name: "contracts::BetMaker::IBetMaker",
        },
        {
          type: "struct",
          name: "core::byte_array::ByteArray",
          members: [
            {
              name: "data",
              type: "core::array::Array::<core::bytes_31::bytes31>",
            },
            {
              name: "pending_word",
              type: "core::felt252",
            },
            {
              name: "pending_word_len",
              type: "core::integer::u32",
            },
          ],
        },
        {
          type: "struct",
          name: "core::integer::u256",
          members: [
            {
              name: "low",
              type: "core::integer::u128",
            },
            {
              name: "high",
              type: "core::integer::u128",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::BetMaker::StrategyInfos",
          members: [
            {
              name: "name",
              type: "core::felt252",
            },
            {
              name: "symbol",
              type: "core::felt252",
            },
            {
              name: "address",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "yield_strategy_type",
              type: "core::integer::u256",
            },
          ],
        },
        {
          type: "enum",
          name: "contracts::BetMaker::ERC20BetTokenType",
          variants: [
            {
              name: "Eth",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "Usdc",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::BetMaker::CreateBetOutcomesArgument",
          members: [
            {
              name: "outcome_yes",
              type: "core::felt252",
            },
            {
              name: "outcome_no",
              type: "core::felt252",
            },
          ],
        },
        {
          type: "enum",
          name: "contracts::BetMaker::BetType",
          variants: [
            {
              name: "Crypto",
              type: "()",
            },
            {
              name: "Sports",
              type: "()",
            },
            {
              name: "Other",
              type: "()",
            },
          ],
        },
        {
          type: "enum",
          name: "contracts::BetMaker::PositionType",
          variants: [
            {
              name: "Yes",
              type: "()",
            },
            {
              name: "No",
              type: "()",
            },
          ],
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::BetMaker::NimboraStrategyInfos",
          members: [
            {
              name: "name",
              type: "core::felt252",
            },
            {
              name: "symbol",
              type: "core::felt252",
            },
            {
              name: "address",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "shares",
              type: "core::integer::u256",
            },
          ],
        },
        {
          type: "enum",
          name: "contracts::BetMaker::YieldStrategy",
          variants: [
            {
              name: "None",
              type: "()",
            },
            {
              name: "Nimbora",
              type: "contracts::BetMaker::NimboraStrategyInfos",
            },
            {
              name: "Nostra",
              type: "contracts::BetMaker::StrategyInfos",
            },
          ],
        },
        {
          type: "struct",
          name: "openzeppelin_token::erc20::interface::IERC20Dispatcher",
          members: [
            {
              name: "contract_address",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::BetMaker::ERC20BetToken",
          members: [
            {
              name: "name",
              type: "core::felt252",
            },
            {
              name: "dispatcher",
              type: "openzeppelin_token::erc20::interface::IERC20Dispatcher",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::BetMaker::Outcome",
          members: [
            {
              name: "name",
              type: "core::felt252",
            },
            {
              name: "pos_type",
              type: "contracts::BetMaker::PositionType",
            },
            {
              name: "bought_amount",
              type: "core::integer::u256",
            },
            {
              name: "bought_amount_with_yield",
              type: "core::integer::u256",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::BetMaker::Outcomes",
          members: [
            {
              name: "outcome_yes",
              type: "contracts::BetMaker::Outcome",
            },
            {
              name: "outcome_no",
              type: "contracts::BetMaker::Outcome",
            },
          ],
        },
        {
          type: "enum",
          name: "core::option::Option::<contracts::BetMaker::Outcome>",
          variants: [
            {
              name: "Some",
              type: "contracts::BetMaker::Outcome",
            },
            {
              name: "None",
              type: "()",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::BetMaker::CryptoBet",
          members: [
            {
              name: "bet_id",
              type: "core::integer::u256",
            },
            {
              name: "name",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "image",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "category",
              type: "core::felt252",
            },
            {
              name: "description",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "is_settled",
              type: "core::bool",
            },
            {
              name: "is_active",
              type: "core::bool",
            },
            {
              name: "deadline",
              type: "core::integer::u256",
            },
            {
              name: "vote_deadline",
              type: "core::integer::u256",
            },
            {
              name: "total_money_betted",
              type: "core::integer::u256",
            },
            {
              name: "yield_strategy",
              type: "contracts::BetMaker::YieldStrategy",
            },
            {
              name: "reference_price_key",
              type: "core::felt252",
            },
            {
              name: "reference_price",
              type: "core::integer::u256",
            },
            {
              name: "bet_condition",
              type: "core::integer::u256",
            },
            {
              name: "bet_token",
              type: "contracts::BetMaker::ERC20BetToken",
            },
            {
              name: "outcomes",
              type: "contracts::BetMaker::Outcomes",
            },
            {
              name: "winner_outcome",
              type: "core::option::Option::<contracts::BetMaker::Outcome>",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::BetMaker::UserPosition",
          members: [
            {
              name: "position_type",
              type: "contracts::BetMaker::PositionType",
            },
            {
              name: "amount",
              type: "core::integer::u256",
            },
            {
              name: "bought_amount",
              type: "core::integer::u256",
            },
            {
              name: "has_claimed",
              type: "core::bool",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::BetMaker::IBetMaker",
          items: [
            {
              type: "function",
              name: "create_crypto_bet",
              inputs: [
                {
                  name: "name",
                  type: "core::byte_array::ByteArray",
                },
                {
                  name: "image",
                  type: "core::byte_array::ByteArray",
                },
                {
                  name: "description",
                  type: "core::byte_array::ByteArray",
                },
                {
                  name: "deadline",
                  type: "core::integer::u256",
                },
                {
                  name: "vote_deadline",
                  type: "core::integer::u256",
                },
                {
                  name: "yield_strategy_infos",
                  type: "contracts::BetMaker::StrategyInfos",
                },
                {
                  name: "reference_price_key",
                  type: "core::felt252",
                },
                {
                  name: "reference_price",
                  type: "core::integer::u256",
                },
                {
                  name: "bet_condition",
                  type: "core::integer::u256",
                },
                {
                  name: "bet_token_address",
                  type: "contracts::BetMaker::ERC20BetTokenType",
                },
                {
                  name: "outcomes",
                  type: "contracts::BetMaker::CreateBetOutcomesArgument",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "create_user_position",
              inputs: [
                {
                  name: "bet_id",
                  type: "core::integer::u256",
                },
                {
                  name: "bet_type",
                  type: "contracts::BetMaker::BetType",
                },
                {
                  name: "position_type",
                  type: "contracts::BetMaker::PositionType",
                },
                {
                  name: "amount",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "settle_crypto_bet",
              inputs: [
                {
                  name: "bet_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "settle_crypto_bet_manually",
              inputs: [
                {
                  name: "bet_id",
                  type: "core::integer::u256",
                },
                {
                  name: "winner_type",
                  type: "contracts::BetMaker::PositionType",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "claim_rewards",
              inputs: [
                {
                  name: "bet_id",
                  type: "core::integer::u256",
                },
                {
                  name: "bet_type",
                  type: "contracts::BetMaker::BetType",
                },
                {
                  name: "position_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "get_position_rewards_amount",
              inputs: [
                {
                  name: "caller",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "bet_id",
                  type: "core::integer::u256",
                },
                {
                  name: "bet_type",
                  type: "contracts::BetMaker::BetType",
                },
                {
                  name: "position_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u256",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_crypto_bet",
              inputs: [
                {
                  name: "bet_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "contracts::BetMaker::CryptoBet",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_crypto_bets_count",
              inputs: [],
              outputs: [
                {
                  type: "core::integer::u256",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_vault_wallet",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_user_position",
              inputs: [
                {
                  name: "caller",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "bet_id",
                  type: "core::integer::u256",
                },
                {
                  name: "bet_type",
                  type: "contracts::BetMaker::BetType",
                },
                {
                  name: "position_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "contracts::BetMaker::UserPosition",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_user_total_positions",
              inputs: [
                {
                  name: "caller",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "bet_id",
                  type: "core::integer::u256",
                },
                {
                  name: "bet_type",
                  type: "contracts::BetMaker::BetType",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u256",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_oracle_crypto_price",
              inputs: [
                {
                  name: "asset_key",
                  type: "core::felt252",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u128",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "set_vault_wallet",
              inputs: [
                {
                  name: "wallet",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "impl",
          name: "OwnableImpl",
          interface_name: "openzeppelin_access::ownable::interface::IOwnable",
        },
        {
          type: "interface",
          name: "openzeppelin_access::ownable::interface::IOwnable",
          items: [
            {
              type: "function",
              name: "owner",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "transfer_ownership",
              inputs: [
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounce_ownership",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "pragma_address",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnershipTransferred",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              kind: "nested",
            },
            {
              name: "OwnershipTransferStarted",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::PragmaComponent::PragmaComponent::Event",
          kind: "enum",
          variants: [],
        },
        {
          type: "event",
          name: "contracts::BetMaker::BetMaker::CryptoBetCreated",
          kind: "struct",
          members: [
            {
              name: "market",
              type: "contracts::BetMaker::CryptoBet",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::BetMaker::BetMaker::CryptoBetPositionCreated",
          kind: "struct",
          members: [
            {
              name: "user",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "market",
              type: "contracts::BetMaker::CryptoBet",
              kind: "data",
            },
            {
              name: "position",
              type: "contracts::BetMaker::UserPosition",
              kind: "data",
            },
            {
              name: "position_id",
              type: "core::integer::u256",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::BetMaker::BetMaker::CryptoBetSettled",
          kind: "struct",
          members: [
            {
              name: "market",
              type: "contracts::BetMaker::CryptoBet",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::BetMaker::BetMaker::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnableEvent",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
              kind: "flat",
            },
            {
              name: "PragmaComponentEvent",
              type: "contracts::PragmaComponent::PragmaComponent::Event",
              kind: "flat",
            },
            {
              name: "CryptoBetCreated",
              type: "contracts::BetMaker::BetMaker::CryptoBetCreated",
              kind: "nested",
            },
            {
              name: "CryptoBetPositionCreated",
              type: "contracts::BetMaker::BetMaker::CryptoBetPositionCreated",
              kind: "nested",
            },
            {
              name: "CryptoBetSettled",
              type: "contracts::BetMaker::BetMaker::CryptoBetSettled",
              kind: "nested",
            },
          ],
        },
      ],
      classHash:
        "0x242fc0c634f0101138961bd715de3546492badfea2b2f7f23a48076d5942ce7",
    },
  },
} as const;

export default deployedContracts;
